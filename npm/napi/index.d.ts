/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export function open(path: string, inMemory: boolean | undefined | null, debug: boolean): number
export function close(dbId: number, debug: boolean): void
export function snapshotRead(dbId: number, snapshotReadBytes: Buffer, debug: boolean): Promise<Buffer>
export function atomicWrite(dbId: number, atomicWriteBytes: Buffer, debug: boolean): Promise<Buffer>
export interface QueueMessage {
  bytes: Buffer
  messageId: number
}
export function dequeueNextMessage(dbId: number, debug: boolean): Promise<QueueMessage | undefined>
export function finishMessage(dbId: number, messageId: number, success: boolean, debug: boolean): Promise<void>
export function startWatch(dbId: number, watchBytes: Buffer, debug: boolean): Promise<number>
export function dequeueNextWatchMessage(dbId: number, watchId: number, debug: boolean): Promise<Buffer | undefined>
export function endWatch(dbId: number, watchId: number, debug: boolean): void
